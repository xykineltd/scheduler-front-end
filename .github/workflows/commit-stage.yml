name: Commit Stage
# Trigger the workflow on push or pull request events
on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kacytunde/scheduler-ui
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
#    permissions:
#      contents: read
#      security-events: write
    steps:
      # Checkout the current code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js to the version specified in the `package.json`
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.5.0'  # Use your desired node version

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
#      - name: Run tests
#        run: npm test -- --watchAll=false

#  package:
#    name: Package and Publish
#    if: ${{ github.ref == 'refs/heads/main' }}
#    needs: [ build ]
#    runs-on: ubuntu-22.04
#    permissions:
#      contents: read
#      packages: write
#      security-events: write
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 17
#          cache: gradle
#      - name: Build container image
#        run: |
#          chmod +x gradlew
#          ./gradlew bootBuildImage \
#            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#      - name: OCI image vulnerability scanning
#        uses: anchore/scan-action@v3
#        id: scan
#        with:
#          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#          fail-build: false
#          severity-cutoff: high
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v2
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
#      - name: Log into container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Publish container image
#        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
